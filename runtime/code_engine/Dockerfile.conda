# Python 3.6
#FROM docker.io/continuumio/miniconda3:4.5.4 

# Python 3.7
#FROM docker.io/continuumio/miniconda3:4.7.12

# Python 3.8
#FROM docker.io/continuumio/miniconda3:4.9.2

# Python 3.9
#FROM docker.io/continuumio/miniconda3:4.10.3

# Python 3.10
FROM docker.io/continuumio/miniconda3:23.3.1-0

# Python 3.11
#FROM docker.io/continuumio/miniconda3:23.10.0-1

# YOU MUST PIN THE PYTHON VERSION TO PREVENT IT TO BE UPDATED
# For python 3.6 use "python==3.6.5"
# For python 3.7 use "python==3.7.4"
# For python 3.8 use "python==3.8.5"
# For python 3.9 use "python==3.9.5"
# For python 3.10 use "python==3.10.10"
# For python 3.11 use "python==3.11.7"
RUN echo "python==3.10.10" >> /opt/conda/conda-meta/pinned

ENV FLASK_PROXY_PORT 8080

RUN apt-get --allow-releaseinfo-change update \
        # Upgrade installed packages to get latest security fixes if the base image does not contain them already.
        && apt-get upgrade -y --no-install-recommends \
        # add some packages required for the pip install
        && apt-get install -y --no-install-recommends \
           gcc \
           libc-dev \
           libxslt-dev \
           libxml2-dev \
           libffi-dev \
           libssl-dev \
           zip \
           unzip \
           vim \
           make \
        # cleanup package lists, they are not used anymore in this image
        && rm -rf /var/lib/apt/lists/* \
        && apt-cache search linux-headers-generic

# Add your Conda required packages here. One "RUN" line is better 
# than multiple ones in terms of image size. Install the libmamba 
# solver for faster package resolution. Make sure to put "conda clean --all"
# at the end to remove temporary data. for example:
RUN conda update -n base -y conda \
    && conda install -n base -y conda-libmamba-solver \
    && conda config --set solver libmamba \
    && conda install -c conda-forge -c anaconda -c defaults -y opencv \
    && conda clean --all

# install additional python modules
COPY requirements.txt requirements.txt

RUN pip install --upgrade pip setuptools six gevent \
    && pip install --no-cache-dir -r requirements.txt

ENV PORT 8080
ENV CONCURRENCY 1
ENV TIMEOUT 600
ENV PYTHONUNBUFFERED TRUE

# Copy Lithops proxy and lib to the container image.
ENV APP_HOME /lithops
WORKDIR $APP_HOME

COPY lithops_codeengine.zip .
RUN unzip lithops_codeengine.zip && rm lithops_codeengine.zip

RUN ln -s /opt/conda/bin/python /usr/local/bin/python

CMD exec gunicorn --bind :$PORT --workers $CONCURRENCY --timeout $TIMEOUT lithopsentry:proxy
